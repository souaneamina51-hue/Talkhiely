๐ ุชุนูููุงุช ูููุทูุฑ โ ุฅุถุงูุฉ Whisper ูุน ุงูุชุณุฌูู ูู ุงููููุฑูููู
1. ูุงุฌูุฉ React (ุงูุชุณุฌูู ูู ุงููููุฑูููู)

ุฃุถู ููููู AudioRecorder.jsx (ุฃู ุนุฏูู ุงูููุฌูุฏ).

ุงุณุชุฎุฏู navigator.mediaDevices.getUserMedia ูุทูุจ ุฅุฐู ุงููููุฑูููู.

ุฎุฒูู ุงูุตูุช ูู Blob ุซู ุฃุฑุณูู ุฅูู ุงูุณูุฑูุฑ ุนุจุฑ fetch("/api/transcribe") ุจุงุณุชุฎุฏุงู FormData.

๐น ูุซุงู ูุจุณุท:

const formData = new FormData();
formData.append("file", audioBlob, "recording.webm");

const response = await fetch("/api/transcribe", {
  method: "POST",
  body: formData,
});
const data = await response.json();
console.log("๐ ุงููุต ุงูููุฑุบ:", data.text);

2. ุงูุณูุฑูุฑ (Node.js + Express)

ุฃุถู ููุชุจุงุช:

npm install express multer cors


ุนุฏูู/ุฃุถู ูู server.js:

import express from "express";
import multer from "multer";
import cors from "cors";
import fs from "fs";
import { spawn } from "child_process";

const app = express();
app.use(cors());

const upload = multer({ dest: "uploads/" });

app.post("/api/transcribe", upload.single("file"), (req, res) => {
  const filePath = req.file.path;

  // ุงุณุชุฏุนุงุก ุณูุฑุจุช ุจุงูุซูู
  const py = spawn("python3", ["transcribe.py", filePath]);

  let result = "";
  py.stdout.on("data", (data) => (result += data.toString()));

  py.stderr.on("data", (data) => console.error("Whisper error:", data.toString()));

  py.on("close", () => {
    fs.unlinkSync(filePath); // ุชูุธูู ุงููููุงุช
    res.json({ text: result.trim() });
  });
});

app.listen(3001, () => console.log("๐ Server running on http://localhost:3001"));

3. ุณูุฑุจุช Whisper (transcribe.py)

ุฃูุดุฆ ููู transcribe.py ุจุฌุงูุจ server.js.

ุงูููุฏ:

import sys
import whisper

model = whisper.load_model("base")
audio_path = sys.argv[1]

result = model.transcribe(audio_path, language="ar")
print(result["text"])

4. ุงูุชุซุจูุช

ุซุจูุช ููุชุจุฉ Whisper ูู ุจูุฆุฉ ุงูุจุงูุซูู:

pip install openai-whisper


(ูุฏ ูุญุชุงุฌ ุฃูุถูุง: pip install torch ุฅุฐุง ูู ููู ูุซุจุชูุง)

5. ุงูุชูุงูู ูุน "ุชูุฎูุตูู"

ุญุงููุงู ุงูุชุทุจูู ูุณุชุฎุฏู fallback (ุชูุฑูุบ ุจุฏูู ุนูุฏ ูุดู OpenAI API).

ุงุณุชุจุฏู ูุฐุง fallback ุจุงูุงุณุชุฏุนุงุก ุงูุฌุฏูุฏ /api/transcribe ุญุชู ูุนุชูุฏ ุนูู Whisper ุงููุญูู.

ุนูุฏ ูุฌุงุญ ุงูุชูุฑูุบุ ูุฑุฑ ุงููุต ูุจุงุดุฑุฉ ููุงุฌูุฉ ุงูุชูุฎูุต /api/summarize ูุงููุนุชุงุฏ.

6. ููุงุญุธุงุช ูููุฉ

ุงุณุชุฎุฏู .gitignore ูููุน ุฑูุน ุงููููุงุช ุงูุตูุชูุฉ ุฃู ููุงุชูุญ ุญุณุงุณุฉ.

ุฅุฐุง ุงุดุชุบู Whisper ูุญูููุง ููุฐุง ุณูููุฑ ุชูุงููู OpenAI API.

ูููู ุฅุถุงูุฉ ุงุฎุชูุงุฑ ูู ุงูุฅุนุฏุงุฏุงุช:

"ุชูุฑูุบ ุจุงุณุชุฎุฏุงู OpenAI API"

"ุชูุฑูุบ ุจุงุณุชุฎุฏุงู Whisper ุงููุญูู"