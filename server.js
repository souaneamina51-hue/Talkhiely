
const express = require('express');
const cors = require('cors');
const fs = require('fs').promises;
const path = require('path');

const app = express();
const PORT = process.env.PORT || 5000;
const TRIAL_DURATION_DAYS = 7;

// Middleware
app.use(cors());
app.use(express.json());

// ูุณุงุฑ ููู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุคูุชุฉ
const DB_PATH = path.join(__dirname, 'trials.json');

// ูุฑุงุกุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช
async function readDatabase() {
  try {
    const data = await fs.readFile(DB_PATH, 'utf8');
    return JSON.parse(data);
  } catch (error) {
    // ุฅูุดุงุก ููู ุฌุฏูุฏ ุฅุฐุง ูู ููู ููุฌูุฏุงู
    return {};
  }
}

// ูุชุงุจุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช
async function writeDatabase(data) {
  try {
    await fs.writeFile(DB_PATH, JSON.stringify(data, null, 2));
  } catch (error) {
    console.error('ุฎุทุฃ ูู ูุชุงุจุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
  }
}

// ููุทุฉ ููุงูุฉ ููุชุญูู ูู ุงููุชุฑุฉ ุงูุชุฌุฑูุจูุฉ
app.post('/api/check-trial', async (req, res) => {
  try {
    const { deviceId } = req.body;

    if (!deviceId) {
      return res.status(400).json({ 
        error: 'ูุนุฑู ุงูุฌูุงุฒ ูุทููุจ',
        status: 'error'
      });
    }

    const database = await readDatabase();
    const now = new Date();

    // ุงูุชุญูู ูู ูุฌูุฏ ุงูุฌูุงุฒ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
    if (database[deviceId]) {
      const trialStartDate = new Date(database[deviceId].trial_start_date);
      const daysPassed = Math.floor((now - trialStartDate) / (1000 * 60 * 60 * 24));
      const remainingDays = Math.max(0, TRIAL_DURATION_DAYS - daysPassed);

      // ุชุญุฏูุซ ุญุงูุฉ ุงููุชุฑุฉ ุงูุชุฌุฑูุจูุฉ
      database[deviceId].last_access = now.toISOString();
      database[deviceId].status = remainingDays > 0 ? 'active' : 'expired';

      await writeDatabase(database);

      return res.json({
        status: database[deviceId].status,
        remaining_days: remainingDays,
        trial_start_date: database[deviceId].trial_start_date,
        message: remainingDays > 0 ? 
          `ุชุจูู ${remainingDays} ${remainingDays === 1 ? 'ููู' : 'ุฃูุงู'} ุนูู ุงูุชูุงุก ุงููุชุฑุฉ ุงูุชุฌุฑูุจูุฉ` :
          'ุงูุชูุช ุงููุชุฑุฉ ุงูุชุฌุฑูุจูุฉ'
      });

    } else {
      // ุฌูุงุฒ ุฌุฏูุฏ - ุฅูุดุงุก ูุชุฑุฉ ุชุฌุฑูุจูุฉ ุฌุฏูุฏุฉ
      const trialStartDate = now.toISOString();

      database[deviceId] = {
        device_id: deviceId,
        trial_start_date: trialStartDate,
        status: 'active',
        created_at: trialStartDate,
        last_access: trialStartDate
      };

      await writeDatabase(database);

      return res.json({
        status: 'active',
        remaining_days: TRIAL_DURATION_DAYS,
        trial_start_date: trialStartDate,
        message: `ูุฑุญุจุงู! ูุฏูู ${TRIAL_DURATION_DAYS} ุฃูุงู ูุชุฑุฉ ุชุฌุฑูุจูุฉ ูุฌุงููุฉ`
      });
    }

  } catch (error) {
    console.error('ุฎุทุฃ ูู ุงูุชุญูู ูู ุงููุชุฑุฉ ุงูุชุฌุฑูุจูุฉ:', error);
    return res.status(500).json({ 
      error: 'ุฎุทุฃ ุฏุงุฎูู ูู ุงูุฎุงุฏู',
      status: 'error'
    });
  }
});

// ููุทุฉ ููุงูุฉ ูุฅุญุตุงุฆูุงุช ุงููุชุฑุฉ ุงูุชุฌุฑูุจูุฉ (ูููุทูุฑูู)
app.get('/api/trial-stats', async (req, res) => {
  try {
    const database = await readDatabase();
    const devices = Object.values(database);

    const stats = {
      total_devices: devices.length,
      active_trials: devices.filter(d => d.status === 'active').length,
      expired_trials: devices.filter(d => d.status === 'expired').length,
      devices: devices.map(d => ({
        device_id: d.device_id,
        status: d.status,
        trial_start_date: d.trial_start_date,
        last_access: d.last_access
      }))
    };

    res.json(stats);
  } catch (error) {
    console.error('ุฎุทุฃ ูู ุฌูุจ ุงูุฅุญุตุงุฆูุงุช:', error);
    res.status(500).json({ error: 'ุฎุทุฃ ุฏุงุฎูู ูู ุงูุฎุงุฏู' });
  }
});

// ุจุฏุก ุงูุฎุงุฏู
app.listen(PORT, '0.0.0.0', () => {
  console.log(`๐ ุฎุงุฏู ุงููุชุฑุฉ ุงูุชุฌุฑูุจูุฉ ูุนูู ุนูู ุงููููุฐ ${PORT}`);
  console.log(`๐ ุงุญุตุงุฆูุงุช ุงููุชุฑุฉ ุงูุชุฌุฑูุจูุฉ: http://localhost:${PORT}/api/trial-stats`);
});

module.exports = app;
